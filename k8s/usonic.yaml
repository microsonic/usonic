apiVersion: v1
kind: ServiceAccount
metadata:
    name: usonic
    namespace: default


---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: usonic
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: view
subjects:
- kind: ServiceAccount
  name: usonic
  namespace: default

---

apiVersion: apps/v1
kind: Deployment
metadata:
    name: usonic-core
spec:
    replicas: 1
    selector:
        matchLabels:
            app: usonic
            usonic: core
    strategy:
        type: Recreate
    template:
        metadata:
            labels:
                app: usonic
                usonic: core
        spec:
            serviceAccountName: usonic
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            initContainers:
            - name: wait-redis
              image: docker.io/bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              command: ['kubectl', 'wait', '--for=condition=ready', 'pods/redis', '--timeout=5m']
            - name: init-loglevel
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['/var/run/start/start.sh']
              env:
              - name: USONIC_VS_LANEMAP
                value: /etc/usonic/lanemap.ini
              volumeMounts:
              - name: start-script
                mountPath: /var/run/start
              - name: usonic-config
                mountPath: /etc/usonic/
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              securityContext:
                capabilities:
                    add: ["NET_ADMIN"]
            - name: init-configdb
              image: docker.io/microsonic/usonic-cli:latest
              imagePullPolicy: IfNotPresent
              command: ['sonic-cfggen', '-s', '/var/run/redis/redis.sock', '-k', 'dummy', '-p', '/etc/usonic/port_config.ini', '-j', '/etc/sonic/config_db.json', '--write-to-db']
              volumeMounts:
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              - name: config-db-json
                mountPath: /etc/sonic/
              - name: usonic-config
                mountPath: /etc/usonic/
            - name: complete-init
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['redis-cli', '-s', '/var/run/redis/redis.sock', '-n', '4', 'SET', 'CONFIG_DB_INITIALIZED', '1']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
            containers:
            - name: syncd
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['sh', '-c', 'service syslog-ng start && /usr/bin/syncd -p /etc/sonic/sai.profile -d']
              volumeMounts:
              - name: usonic-config
                mountPath: /etc/sonic/
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              - name: tun
                mountPath: /dev/net/tun
              - name: warm-boot
                mountPath: /var/warmboot
              securityContext:
                privileged: true
                capabilities:
                    add: ["NET_ADMIN"]
            - name: orchagent
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['orchagent']
              args: ['-m', '$(GLOBAL_MAC_ADDRESS)']
              env:
              - name: GLOBAL_MAC_ADDRESS
                value: "72:16:EA:18:79:F9"
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              startupProbe:
                exec:
                  command:
                  - grep
                  - SAI_SWITCH_ATTR_NUMBER_OF_ACTIVE_PORTS
                  - sairedis.rec
                failureThreshold: 60 # 60 * 2 = 120sec for SAI initialization
                periodSeconds: 2
            volumes:
            - name: redis-sock
              hostPath:
                  path: /tmp/redis.sock
            - name: tun
              hostPath:
                  path: /dev/net/tun
                  type: CharDevice
            - name: start-script
              configMap:
                  name: start-script
                  defaultMode: 0777
            - name: sai-profile
              configMap:
                  name: sai-profile
            - name: usonic-config
              configMap:
                  name: usonic-config
            - name: config-db-json
              configMap:
                  name: config-db-json
                  items:
                  - key: config_db.json
                    path: config_db.json
            - name: sonic-db-config
              configMap:
                  name: sonic-db-config
            - name: warm-boot
              emptyDir: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
    name: usonic-port
spec:
    replicas: 1
    selector:
        matchLabels:
            app: usonic
            usonic: port
    strategy:
        type: Recreate
    template:
        metadata:
            labels:
                app: usonic
                usonic: port
        spec:
            serviceAccountName: usonic
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            initContainers:
            - name: wait-core
              image: docker.io/bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              command: ['kubectl', 'wait', '--for=condition=available', 'deploy/usonic-core', '--timeout=5m']
            containers:
            - name: portsyncd
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['portsyncd']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                capabilities:
                    add: ["NET_ADMIN"]
                    # TODO: need more research to use this. enabling startupProbe makes
                    # state change to 'ready' really slow.
                    #
                    #              startupProbe:
                    #                exec:
                    #                  command:
                    #                  - bash
                    #                  - -c
                    #                  - 'redis-cli exists PORT_TABLE:PortInitDone | grep 1'
                    #                failureThreshold: 5 # 5sec for Port initialization
                    #                periodSeconds: 1
              livenessProbe:
                exec:
                  command:
                  - bash
                  - -c
                  - 'redis-cli -s /var/run/redis/redis.sock exists PORT_TABLE:PortInitDone | grep 1'
                failureThreshold: 1
                periodSeconds: 10
                # using this instead of startupProbe for now
                initialDelaySeconds: 5
            volumes:
            - name: redis-sock
              hostPath:
                  path: /tmp/redis.sock
            - name: sonic-db-config
              configMap:
                  name: sonic-db-config

---

apiVersion: apps/v1
kind: Deployment
metadata:
    name: usonic-neighbor
spec:
    replicas: 1
    selector:
        matchLabels:
            app: usonic
            usonic: neighbor
    strategy:
        type: Recreate
    template:
        metadata:
            labels:
                app: usonic
                usonic: neighbor
        spec:
            serviceAccountName: usonic
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            initContainers:
            - name: wait-core
              image: docker.io/bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              command: ['kubectl', 'wait', '--for=condition=available', 'deploy/usonic-port', '--timeout=5m']
            containers:
            - name: neighsyncd
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['neighsyncd']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                capabilities:
                    add: ["NET_ADMIN"]
            volumes:
            - name: redis-sock
              hostPath:
                  path: /tmp/redis.sock
            - name: sonic-db-config
              configMap:
                  name: sonic-db-config

---

apiVersion: apps/v1
kind: Deployment
metadata:
    name: usonic-frr
spec:
    replicas: 1
    selector:
        matchLabels:
            app: usonic
            usonic: frr
    strategy:
        type: Recreate
    template:
        metadata:
            labels:
                app: usonic
                usonic: frr
        spec:
            serviceAccountName: usonic
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            initContainers:
            - name: wait-core
              image: docker.io/bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              command: ['kubectl', 'wait', '--for=condition=available', 'deploy/usonic-core', '--timeout=5m']
            containers:
            - name: fpmsyncd 
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['fpmsyncd']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: frr
                mountPath: /var/run/frr/
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                privileged: true
                capabilities:
                    add: ["NET_ADMIN"]
            - name: zebra
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['/usr/lib/frr/zebra', '-A', '127.0.0.1', '-s', '90000000', '-M', 'fpm']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: frr
                mountPath: /var/run/frr/
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                privileged: true
                capabilities:
                    add: ["NET_ADMIN"]
            - name: staticd 
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['/usr/lib/frr/staticd', '-A', '127.0.0.1']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: frr
                mountPath: /var/run/frr/
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                privileged: true
                capabilities:
                    add: ["NET_ADMIN"]
            - name: bgpd 
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['/usr/lib/frr/bgpd', '-A', '127.0.0.1']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: frr
                mountPath: /var/run/frr/
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                privileged: true
                capabilities:
                    add: ["NET_ADMIN"]
            volumes:
            - name: redis-sock
              hostPath:
                  path: /tmp/redis.sock
            - name: frr
              emptyDir: {}
            - name: sonic-db-config
              configMap:
                  name: sonic-db-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: usonic-teamd
spec:
    replicas: 1
    selector:
        matchLabels:
            app: usonic
            usonic: teamd
    strategy:
        type: Recreate
    template:
        metadata:
            labels:
                app: usonic
                usonic: teamd
        spec:
            serviceAccountName: usonic
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            initContainers:
            - name: wait-core
              image: docker.io/bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              command: ['kubectl', 'wait', '--for=condition=available', 'deploy/usonic-port', '--timeout=5m']
            containers:
            - name: teamsyncd
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['teamsyncd']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: teamd
                mountPath: /var/run/teamd/
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                privileged: true
                capabilities:
                    add: ["NET_ADMIN"]
            - name: teammgrd
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['teammgrd']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: teamd
                mountPath: /var/run/teamd/
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                privileged: true
                capabilities:
                    add: ["NET_ADMIN"]
            volumes:
            - name: redis-sock
              hostPath:
                  path: /tmp/redis.sock
            - name: teamd
              emptyDir: {}
            - name: sonic-db-config
              configMap:
                  name: sonic-db-config

---

apiVersion: apps/v1
kind: Deployment
metadata:
    name: usonic-lldpd
spec:
    replicas: 1
    selector:
        matchLabels:
            app: usonic
            usonic: lldpd
    strategy:
        type: Recreate
    template:
        metadata:
            labels:
                app: usonic
                usonic: lldpd
        spec:
            serviceAccountName: usonic
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            initContainers:
            - name: wait-core
              image: docker.io/bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              command: ['kubectl', 'wait', '--for=condition=available', 'deploy/usonic-core', '--timeout=5m']
            containers:
            - name: lldpd
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['/usr/sbin/lldpd', '-d','-I', 'Ethernet*,eth0', '-C', 'eth0']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: lldpd
                mountPath: /var/run/
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                privileged: true
                capabilities:
                    add: ["NET_ADMIN"]
            - name: lldpsyncd
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['/usr/bin/env', 'python2', '-m', 'lldp_syncd']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: lldpd
                mountPath: /var/run/
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                privileged: true
                capabilities:
                    add: ["NET_ADMIN"]
            - name: lldpmgrd
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['/usr/bin/lldpmgrd']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: lldpd
                mountPath: /var/run/
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                privileged: true
                capabilities:
                    add: ["NET_ADMIN"]
            volumes:
            - name: redis-sock
              hostPath:
                  path: /tmp/redis.sock
            - name: lldpd
              emptyDir: {}
            - name: sonic-db-config
              configMap:
                  name: sonic-db-config

---

apiVersion: apps/v1
kind: Deployment
metadata:
    name: usonic-mgrd
spec:
    replicas: 1
    selector:
        matchLabels:
            app: usonic
            usonic: mgrd
    strategy:
        type: Recreate
    template:
        metadata:
            labels:
                app: usonic
                usonic: mgrd
        spec:
            serviceAccountName: usonic
            hostNetwork: true
            dnsPolicy: ClusterFirstWithHostNet
            initContainers:
            - name: wait-core
              image: docker.io/bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              command: ['kubectl', 'wait', '--for=condition=available', 'deploy/usonic-port', '--timeout=5m']
            containers:
            - name: vlanmgrd
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['sh', '-c', 'mount -o remount,rw /sys && vlanmgrd']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                privileged: true
            - name: intfmgrd
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['intfmgrd']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                capabilities:
                    add: ["NET_ADMIN"]
            - name: portmgrd
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['portmgrd']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                capabilities:
                    add: ["NET_ADMIN"]
            - name: nbrmgrd
              image: ghcr.io/microsonic/usonic-debug:201904
              imagePullPolicy: IfNotPresent
              command: ['nbrmgrd']
              volumeMounts:
              - name: redis-sock
                mountPath: /var/run/redis/redis.sock
              - name: sonic-db-config
                mountPath: /var/run/redis/sonic-db/
              securityContext:
                capabilities:
                    add: ["NET_ADMIN"]
            volumes:
            - name: redis-sock
              hostPath:
                  path: /tmp/redis.sock
            - name: sonic-db-config
              configMap:
                  name: sonic-db-config
